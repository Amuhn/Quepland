@inherits LayoutComponentBase
@inject GameState  GameState
@implements IDisposable

<div class="sidebar">
    <NavMenu />
</div>
@if (!GameState.isSplitView)
{
    <div style="height:100vh;min-width:425px;overflow:scroll"class="main" >
        <div class="top-row px-4">
            <table style="width:100%">
                <tr>
                    @if (GameState.canBank)
                    {
                        <td><a href="/Followers">Followers</a></td>
                    }

                    @if (GameState.CanLeave())
                    {

                        <td><a href="/Help"> Help</a></td>
                        <td><a href="/About"> About</a></td>
                        <td><a href="/Updates"> Updates(1.011a)</a></td>
                        <td><a href="/Settings"> Settings</a></td>

                    }

                </tr>
            </table>
        </div>

        <div class="content px-4">
            @Body
            <div class="footer navbar-fixed-bottom">
                <MessagesMenu />
            </div>
        </div>

    </div>
}
else
{
    <div class="main" style="height:100vh;overflow:scroll">
        <div class="top-row px-4">
            <table style="width:100%">
                <tr>
                    @if (GameState.canBank)
                    {
                        <td><a href="/Followers">Followers</a></td>
                    }

                    @if (GameState.CanLeave())
                    {

                        <td><a href="/Help"> Help</a></td>
                        <td><a href="/About"> About</a></td>
                        <td><a href="/Updates"> Updates</a></td>
                        <td><a href="/Settings"> Settings</a></td>

                    }

                </tr>
            </table>
        </div>

        <div class="content px-4">
            @Body
            <div class="footer navbar-fixed-bottom">
                <MessagesMenu />
            </div>
        </div>

    </div>
}

@if (GameState.isSplitView)
{
    <div class="col-md-3" style="height:100vh;padding-left:0px; padding-right:0px;overflow:scroll">
        <SkillsMenu />
    </div>
    <div class="col-md-3" style="height:100vh;padding-left:0px; padding-right:0px;overflow:scroll">
        <Inventory />
    </div>
}
else
{
    if (GameState.inventoryIsActiveView)
    { <div class="col-md-3" style="height:100vh;padding-left:0px; padding-right:0px; min-width:400px;overflow:scroll">
            <Inventory />
        </div>

    }
    else
    {
        <div class="col-md-3" style="height:100vh;padding-left:0px; padding-right:0px; min-width:400px;overflow:scroll">
            <SkillsMenu />
        </div>
    }
}


@functions{
    private string backURL;

    protected override void OnInit()
    {

        GameState.StateChanged += OnGameStateChanged;
        GameState.UpdateState();

        this.StateHasChanged();
    }
    void IDisposable.Dispose()
    {
        GameState.UpdateState();
        GameState.StateChanged -= OnGameStateChanged;
    }
    void OnGameStateChanged(object sender, EventArgs e) => StateHasChanged();
}